- name: Playbook to configure ansible controller
  hosts: localhost
  connection: local
  vars:
    user: "{{ username }}"

  environment:
    CONTROLLER_HOST: "ansible-1"
    CONTROLLER_USERNAME: "admin"
    CONTROLLER_PASSWORD: "{{ password }}"
    CONTROLLER_VERIFY_SSL: false

  tasks:
    - name: Create projects
      ansible.controller.project:
        name: Student Project
        organization: "Red Hat network organization"
        scm_url: "http://ansible-1:3000/gitea/network-demos-repo.git"
        scm_type: git
        allow_override: true
        state: present
        scm_update_on_launch: yes

    - name: Add group
      ansible.controller.group:
        name: cisco
        variables:
          ansible_connection: network_cli
          ansible_network_os: cisco.ios.ios
        inventory: "Workshop Inventory"
        state: present

    - name: Add group
      ansible.controller.group:
        name: arista
        variables:
          ansible_connection: network_cli
          ansible_network_os: arista.eos.eos
          ansible_become: "true"
          ansible_become_method: enable
        inventory: "Workshop Inventory"

    - name: Add group
      ansible.controller.group:
        name: juniper
        variables:
          ansible_connection: netconf
          ansible_network_os: junipernetworks.junos.junos
        inventory: "Workshop Inventory"
        state: present

    - name: Create Execution Environments
      ansible.controller.execution_environment:
        name: "Validated Network"
        image: registry.gitlab.com/redhatautomation/validated-network-ee:latest
        pull: missing

    - name: Gitea Credential Type
      ansible.controller.credential_type:
        injectors:
          extra_vars:
            email: "{{ email | default ('{{ email }}') }}"
            password: "{{ git_password | default ('{{ git_password }}') }}"
            username: "{{ username | default ('{{ username }}') }}"
            token: "{{ git_password | default ('{{ git_password }}') }}"
        inputs:
          fields:
            - id: username
              label: Username
              type: string
            - id: password
              label: Password
              secret: true
              type: string
            - id: email
              label: Email
              type: string
          required:
            - username
            - password
            - email
        kind: cloud
        name: Gitea Student

    - name: Gitea Credential
      ansible.controller.credential:
        credential_type: Gitea Student
        description: ""
        inputs:
          username: "gitea"
          password: "gitea"
          email: admin@example.com
        name: Gitea Credential
        organization: "Red Hat network organization"

    #Network Backups to GIT
    - name: Create a job-template - Network-Backups-Git
      ansible.controller.job_template:
        name: "Network-Backups-Git"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "network_backups_git/backups.yml"
        credentials:
          - "Workshop Credential"
          - "Gitea Credential"
          - "Controller Credential"
        execution_environment: "Validated Network"
        state: "present"
        survey_enabled: true
        survey_spec:
          name: ""
          description: ""
          spec:
            - question_name: Would you like to add a custom branch name or ignore for the default?
              type: text
              max: 1024
              min: 0
              variable: branch_name
              required: false
              default: ""
            - question_name: Which Group or Groups to Backup Configurations
              type: multiselect
              variable: _group
              required: true
              default: ""
              choices:
                - cisco
                - arista
                - juniper
      when: inventory_hostname == 'localhost'

    # Network Compliance Dashboard
    - name: Create a job-template - Network-Config
      ansible.controller.job_template:
        name: "Network-Config"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "network_compliance_dashboard/config.yml"
        credentials:
          - "Workshop Credential"
        execution_environment: "Validated Network"
        state: "present"

    - name: Create a job-template - Network-Compliance-Dashboard
      ansible.controller.job_template:
        name: "Network-Compliance-Dashboard"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "network_compliance_dashboard/network_report.yml"
        credentials:
          - "Workshop Credential"
        execution_environment: "Validated Network"
        state: "present"

    # This section includes Network-Check-Compliance Demo
    - name: Create a job-template - Network-Check-Compliance
      ansible.controller.job_template:
        name: "Network-Check-Compliance"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "network_compliance_checks_remediations/compliance.yml"
        credentials:
          - "Workshop Credential"
        execution_environment: "Validated Network"
        job_type: check
        state: "present"

    - name: Create a job-template - Network-Run-Compliance
      ansible.controller.job_template:
        name: "Network-Run-Compliance"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "network_compliance_checks_remediations/compliance_run.yml"
        credentials:
          - "Workshop Credential"
        execution_environment: "Validated Network"
        state: "present"

    - name: Create a workflow job template
      ansible.controller.workflow_job_template:
        name: Network-Compliance-Workflow
        inventory: "Workshop Inventory"
        organization: "Red Hat network organization"
        state: present
        survey_enabled: true
        survey:
          name: ""
          description: ""
          spec:
            - question_name: Which groups/devices to run checks against?
              type: multiselect
              variable: _group
              required: true
              default: ""
              choices:
                - cisco
                - arista
                - juniper
            - question_name: Please select the desired compliance roles?
              type: multiselect
              variable: tag
              required: true
              default: ""
              choices:
                - logging
                - snmp
                - ntp
                - stig-ios
                - stig-junos

    - name: Node Network-Run-Compliance
      ansible.controller.workflow_job_template_node:
        identifier: Network-Run-Compliance
        workflow: "Network-Compliance-Workflow"
        unified_job_template: Network-Run-Compliance
        organization: "Red Hat network organization"
        state: present

    - name: Node Change Approval
      ansible.controller.workflow_job_template_node:
        identifier: "Change Approval"
        workflow_job_template: "Network-Compliance-Workflow"
        organization: "Red Hat network organization"
        approval_node:
          name: "Change Approval"
          timeout: 0
        state: present

    - name: Node Change Approval
      ansible.controller.workflow_job_template_node:
        identifier: "Change Approval"
        workflow_job_template: "Network-Compliance-Workflow"
        organization: "Red Hat network organization"
        success_nodes:
          - Network-Run-Compliance
        state: present

    - name: Node Network-Check-Compliance
      ansible.controller.workflow_job_template_node:
        identifier: Network-Check-Compliance
        workflow: "Network-Compliance-Workflow"
        unified_job_template: Network-Check-Compliance
        organization: "Red Hat network organization"
        success_nodes: "Change Approval"
        state: present

    # This section includes Scoped-config-management

    - name: Create a job-template - Network-Validated-Persist
      ansible.controller.job_template:
        name: "Network-Validated-Persist"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "scoped_configuration_management/persist.yml"
        credentials:
          - "Workshop Credential"
          - "Gitea Credential"
        execution_environment: "Validated Network"
        state: "present"

    - name: Create a job-template - Network-Validated-Deploy
      ansible.controller.job_template:
        name: "Network-Validated-Deploy"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "scoped_configuration_management/deploy.yml"
        credentials:
          - "Workshop Credential"
          - "Gitea Credential"
        execution_environment: "Validated Network"
        state: "present"

    - name: Create a job-template - Network-Validated-Detect
      ansible.controller.job_template:
        name: "Network-Validated-Detect"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "scoped_configuration_management/detect.yml"
        credentials:
          - "Workshop Credential"
          - "Gitea Credential"
        execution_environment: "Validated Network"
        state: "present"

    - name: Create a job-template - Network-Validated-Remediate
      ansible.controller.job_template:
        name: "Network-Validated-Remediate"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "scoped_configuration_management/remediate.yml"
        credentials:
          - "Workshop Credential"
          - "Gitea Credential"
        execution_environment: "Validated Network"
        state: "present"

    # This section is for the Network-Basic Workflow and also the completed network automation workshop 101 AAP Demo
    - name: Create a job-template - Backup network configurations
      ansible.controller.job_template:
        name: "Backup network configurations"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "network_basic_workflow/playbooks/network_backup.yml"
        credentials:
          - "Workshop Credential"
          - "Controller Credential"
        execution_environment: "Validated Network"
        state: "present"

    - name: Create a job-template - Network Automation - Restore
      ansible.controller.job_template:
        name: "Network Automation - Restore"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "network_basic_workflow/playbooks/network_restore.yml"
        credentials:
          - "Workshop Credential"
        execution_environment: "Validated Network"
        state: "present"

    - name: Create a job-template - Network-Banner
      ansible.controller.job_template:
        name: "Network-Banner"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "network_basic_workflow/playbooks/network_banner.yml"
        credentials:
          - "Workshop Credential"
        execution_environment: "Validated Network"
        state: present

    - name: Create a job-template - Network-User
      ansible.controller.job_template:
        name: "Network-User"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "network_basic_workflow/playbooks/network_user.yml"
        credentials:
          - "Workshop Credential"
        execution_environment: "Validated Network"
        state: "present"

    - name: Enable host
      ansible.controller.host:
        name: backup-server
        state: present
        inventory: "Workshop Inventory"
        enabled: true

    - name: Workshop Workflow
      ansible.controller.workflow_job_template:
        name: "Workshop Workflow"
        organization: "Red Hat network organization"
        state: present
        survey_enabled: yes
        survey_spec:
          {
            "description": "",
            "name": "",
            "spec":
              [
                {
                  "choices": "",
                  "default": "",
                  "max": 1024,
                  "min": 0,
                  "new_question": true,
                  "question_description": "Please type into the text field the desired banner",
                  "question_name": "Please enter the banner text",
                  "required": true,
                  "type": "textarea",
                  "variable": "net_banner",
                },
                {
                  "choices": "login\nmotd",
                  "default": "login",
                  "max": 1024,
                  "min": 0,
                  "new_question": true,
                  "question_description": "Please choose an option",
                  "question_name": "Please enter the banner type",
                  "required": true,
                  "type": "multiplechoice",
                  "variable": "net_type",
                },
              ],
          }

    - name: Network Automation - Restore
      ansible.controller.workflow_job_template_node:
        identifier: Network Automation - Restore
        workflow: "Workshop Workflow"
        unified_job_template: Network Automation - Restore
        organization: "Red Hat network organization"
        state: present

    - name: Network-User
      ansible.controller.workflow_job_template_node:
        identifier: Network-User
        workflow: "Workshop Workflow"
        unified_job_template: Network-User
        organization: "Red Hat network organization"
        state: present
        failure_nodes:
          - Network Automation - Restore

    - name: Network-Banner
      ansible.controller.workflow_job_template_node:
        identifier: Network-Banner
        workflow: "Workshop Workflow"
        unified_job_template: Network-Banner
        organization: "Red Hat network organization"
        state: present
        failure_nodes:
          - Network Automation - Restore

    - name: Backup network configuration
      ansible.controller.workflow_job_template_node:
        identifier: Backup network configuration
        workflow: "Workshop Workflow"
        unified_job_template: Backup network configurations
        organization: "Red Hat network organization"
        state: present
        success_nodes:
          - Network-Banner
          - Network-User

    # This section includes the Cisco ACI
    - name: Add Host
      ansible.controller.host:
        name: apic1
        inventory: "Workshop Inventory"
        state: present
        enabled: true
        variables:
          #apic_host: 10.10.20.14 # change for devnet reservered sandbox
          apic_host: sandboxapicdc.cisco.com #change for always on sandbox
          #apic_host: 192.168.0.180

    - name: Add group
      ansible.controller.group:
        name: apic
        hosts:
          - apic1
        inventory: "Workshop Inventory"
        state: present

    - name: Create a job-template - ACI-Day0-1-Config-Staging
      ansible.controller.job_template:
        name: "ACI-Day0-1-Config-Staging"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "cisco_aci/playbooks/aci_day0-1.yml"
        execution_environment: "Validated Network"
        state: "present"

    - name: Create a job-template - ACI-Rollback
      ansible.controller.job_template:
        name: "ACI-Rollback"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "cisco_aci/playbooks/aci_rollback.yml"
        execution_environment: "Validated Network"
        state: "present"

    - name: Create a job-template - ACI-Day2-Health-Check
      ansible.controller.job_template:
        name: "ACI-Day2-Health-Check"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "cisco_aci/playbooks/aci_health_day2.yml"
        execution_environment: "Validated Network"
        state: "present"

    - name: 0-ACI-as-Code-Workflow
      ansible.controller.workflow_job_template:
        name: 0-ACI-as-Code-Workflow
        survey_enabled: yes
        survey_spec:
          {
            "description": "",
            "name": "",
            "spec":
              [
                {
                  "choices": "",
                  "default": "",
                  "max": 1024,
                  "min": 0,
                  "new_question": true,
                  "question_description": "",
                  "question_name": "Enter your Username",
                  "required": true,
                  "type": "text",
                  "variable": "apic_username",
                },
                {
                  "choices": "",
                  "default": "",
                  "formattedChoices":
                    [{ "choice": "", "id": 0, "isDefault": false }],
                  "max": 1024,
                  "min": 0,
                  "new_question": false,
                  "question_description": "",
                  "question_name": "Enter your Password",
                  "required": true,
                  "type": "password",
                  "variable": "apic_password",
                },
                {
                  "choices": "False\nTrue",
                  "default": "False",
                  "max": 1024,
                  "min": 0,
                  "new_question": true,
                  "question_description": "",
                  "question_name": "Validate APIC Certificate",
                  "required": true,
                  "type": "multiplechoice",
                  "variable": "apic_validate_certs",
                },
                {
                  "choices": "",
                  "default": "",
                  "formattedChoices":
                    [{ "choice": "", "id": 0, "isDefault": false }],
                  "max": 1024,
                  "min": 0,
                  "new_question": false,
                  "question_description": "",
                  "question_name": "Please enter your Change-ID",
                  "required": true,
                  "type": "text",
                  "variable": "snapshot",
                },
              ],
          }

    - name: ACI-Day2-Health-Check
      ansible.controller.workflow_job_template_node:
        identifier: ACI-Day2-Health-Check
        workflow: 0-ACI-as-Code-Workflow
        unified_job_template: ACI-Day2-Health-Check

    - name: ACI-Rollback
      ansible.controller.workflow_job_template_node:
        identifier: ACI-Rollback
        workflow: 0-ACI-as-Code-Workflow
        unified_job_template: ACI-Rollback

    - name: ACI-Day0-1-Config-Staging
      ansible.controller.workflow_job_template_node:
        identifier: ACI-Day0-1-Config-Staging
        workflow: 0-ACI-as-Code-Workflow
        unified_job_template: ACI-Day0-1-Config-Staging
        success_nodes: ACI-Day2-Health-Check
        failure_nodes: ACI-Rollback

    #This section includes Cisco DNAC

    - name: Create Inventory
      ansible.controller.inventory:
        name: DNAC Inventory
        organization: "Red Hat network organization"

    - name: Create projects
      ansible.controller.project:
        name: DNAC Project
        organization: "Red Hat network organization"
        scm_url: "http://ansible-1:3000/gitea/network-demos-repo.git"
        scm_type: git
        allow_override: true
        state: present
        scm_update_on_launch: yes

    - name: Add an inventory source
      ansible.controller.inventory_source:
        name: "source-dnac"
        description: Source for inventory
        inventory: "DNAC Inventory"
        update_on_launch: True
        source: scm
        source_path: dynamic_inventory/dna_center.yml
        source_project: "DNAC Project"
        execution_environment: "Validated Network"

    - name: Add Host
      ansible.controller.host:
        name: dnac_server
        inventory: "DNAC Inventory"
        state: present
        enabled: true
        variables:
          dnac_host: https://sandboxdnac.cisco.com
          dnac_port: 443
          dnac_username: devnetuser
          dnac_password: Cisco123!

    - name: Add group
      ansible.controller.group:
        name: dnac_servers
        hosts:
          - dnac_server
        inventory: "DNAC Inventory"
        state: present

    - name: Create a job-template - DNAC-Config-Retrieve
      ansible.controller.job_template:
        name: "DNAC-Config-Retrieve"
        organization: "Red Hat network organization"
        inventory: "DNAC Inventory"
        project: "DNAC Project"
        playbook: "cisco_dnac/config_collect.yml"
        execution_environment: "Validated Network"
        state: "present"
        credentials:
          - "Gitea Credential"
        survey_enabled: true
        survey_spec:
          name: ""
          description: ""
          spec:
            - question_name: Which groups/devices to retrieve Configs from DNAC
              type: multiselect
              variable: device_id
              required: true
              default: ""
              choices:
                - sw1
                - sw2
                - sw3
                - sw4
    - name: Create a job-template - DNAC-Config-Compliance
      ansible.controller.job_template:
        name: "DNAC-Config-Compliance"
        organization: "Red Hat network organization"
        inventory: "DNAC Inventory"
        project: "DNAC Project"
        playbook: "cisco_dnac/config_compliance.yml"
        execution_environment: "Validated Network"
        state: "present"
        credentials:
          - "Gitea Credential"
        survey_enabled: true
        survey_spec:
          name: ""
          description: ""
          spec:
            - question_name: Which groups/devices to retrieve Compliance info from DNAC
              type: multiselect
              variable: device_id
              required: true
              default: ""
              choices:
                - sw1
                - sw2
                - sw3
                - sw4

    #This section starts the Network - SNOW demo

    - name: Create Inventory
      ansible.controller.inventory:
        name: SNOW Inventory
        organization: "Red Hat network organization"

    - name: Create projects
      ansible.controller.project:
        name: SNOW Project
        organization: "Red Hat network organization"
        scm_url: "http://ansible-1:3000/gitea/network-demos-repo.git"
        scm_type: git
        allow_override: true
        state: present
        scm_update_on_launch: yes

    - name: Add an inventory source
      ansible.controller.inventory_source:
        name: "source-snow"
        description: Source for inventory
        inventory: "SNOW Inventory"
        update_on_launch: True
        source: scm
        source_path: dynamic_inventory/now.yml
        source_project: SNOW Project
        execution_environment: "Validated Network"
        source_vars:
          SN_USERNAME: ""
          SN_PASSWORD: ""

    - name: Create a job-template - Network-Banner-Check
      ansible.controller.job_template:
        name: "Network-Banner-Check"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "network_snow/banner_incident.yml"
        credentials:
          - "Workshop Credential"
        execution_environment: "Validated Network"
        state: "present"

    - name: Create a job-template - Network-Banner-Resolve
      ansible.controller.job_template:
        name: "Network-Banner-Resolve"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "network_snow/banner_resolve.yml"
        credentials:
          - "Workshop Credential"
        execution_environment: "Validated Network"
        state: "present"

    - name: Create a job-template - Network-Banner-Fix
      ansible.controller.job_template:
        name: "Network-Banner-Fix"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "network_snow/banner_fix.yml"
        credentials:
          - "Workshop Credential"
          - "Controller Credential"
        execution_environment: "Validated Network"
        state: "present"
        survey_enabled: yes
        survey_spec:
          {
            "description": "",
            "name": "",
            "spec":
              [
                {
                  "choices": "",
                  "default": "",
                  "max": 1024,
                  "min": 0,
                  "new_question": true,
                  "question_description": "Please type into the text field the desired banner",
                  "question_name": "Please enter the banner text",
                  "required": true,
                  "type": "textarea",
                  "variable": "net_banner",
                },
                {
                  "choices": "",
                  "default": "",
                  "max": 1024,
                  "min": 1,
                  "new_question": true,
                  "question_description": "",
                  "question_name": "workflow_job_id",
                  "required": true,
                  "type": "text",
                  "variable": "workflow_job_id",
                },
              ],
          }

    - name: Workshop Workflow
      ansible.controller.workflow_job_template:
        name: "Network-ServiceNow-Workflow"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        extra_vars:
          SN_HOST: https://ansible.service-now.com
        state: present
        survey_enabled: yes
        survey_spec:
          {
            "description": "",
            "name": "",
            "spec":
              [
                {
                  "choices": "",
                  "default": "",
                  "max": 1024,
                  "min": 0,
                  "new_question": true,
                  "question_description": "",
                  "question_name": "Enter your SNOW Username",
                  "required": true,
                  "type": "text",
                  "variable": "SN_USERNAME",
                },
                {
                  "choices": "",
                  "default": "",
                  "formattedChoices":
                    [{ "choice": "", "id": 0, "isDefault": false }],
                  "max": 1024,
                  "min": 0,
                  "new_question": false,
                  "question_description": "",
                  "question_name": "Enter your SNOW Password",
                  "required": true,
                  "type": "password",
                  "variable": "SN_PASSWORD",
                },
              ],
          }

    - name: Network-Banner-Resolve
      ansible.controller.workflow_job_template_node:
        identifier: Network-Banner-Resolve
        workflow: "Network-ServiceNow-Workflow"
        unified_job_template: Network-Banner-Resolve
        organization: "Red Hat network organization"
        state: present

    - name: Troubleshoot-Approval
      ansible.controller.workflow_job_template_node:
        identifier: Troubleshoot-Approval
        workflow_job_template: "Network-ServiceNow-Workflow"
        organization: "Red Hat network organization"
        approval_node:
          name: "Troubleshoot-Approval"
          timeout: 0
        state: present

    - name: Troubleshoot-Approval
      ansible.controller.workflow_job_template_node:
        identifier: Troubleshoot-Approval
        workflow_job_template: "Network-ServiceNow-Workflow"
        organization: "Red Hat network organization"
        state: present
        success_nodes:
          - "Network-Banner-Resolve"
      ignore_errors: true

    - name: Network-Banner-Check
      ansible.controller.workflow_job_template_node:
        identifier: Network-Banner-Check
        workflow: "Network-ServiceNow-Workflow"
        unified_job_template: Network-Banner-Check
        organization: "Red Hat network organization"
        state: present
        failure_nodes:
          - Troubleshoot-Approval

    - name: Create a job-template - Network-CMDP-Udate
      ansible.controller.job_template:
        name: "Network-CMDB-Update"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "network_snow/update_cmdb.yml"
        credentials:
          - "Workshop Credential"
        execution_environment: "Validated Network"
        state: "present"
        survey_enabled: yes
        survey_spec:
          {
            "description": "",
            "name": "",
            "spec":
              [
                {
                  "choices": "",
                  "default": "",
                  "max": 1024,
                  "min": 0,
                  "new_question": true,
                  "question_description": "",
                  "question_name": "Enter your SNOW Username",
                  "required": true,
                  "type": "text",
                  "variable": "SN_USERNAME",
                },
                {
                  "choices": "",
                  "default": "",
                  "formattedChoices":
                    [{ "choice": "", "id": 0, "isDefault": false }],
                  "max": 1024,
                  "min": 0,
                  "new_question": false,
                  "question_description": "",
                  "question_name": "Enter your SNOW Password",
                  "required": true,
                  "type": "password",
                  "variable": "SN_PASSWORD",
                },
              ],
          }
    - name: Create a job-template - Network-SNOW-Facts
      ansible.controller.job_template:
        name: "Network-SNOW-Facts"
        organization: "Red Hat network organization"
        inventory: "SNOW Inventory"
        project: "SNOW Project"
        playbook: "network_snow/facts.yml"
        credentials:
          - "Workshop Credential"
        execution_environment: "Validated Network"
        state: "present"

    # This Starts the NetBox Section

    - name: Create a job-template - Network-Netbox-Setup
      ansible.controller.job_template:
        name: "Network-Netbox-Setup"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "netbox/setup_netbox.yml"
        credentials:
          - "Workshop Credential"
        execution_environment: "Validated Network"
        state: "present"
        survey_enabled: yes
        survey_spec:
          {
            "description": "",
            "name": "",
            "spec":
              [
                {
                  "choices": "",
                  "default": "",
                  "max": 1024,
                  "min": 0,
                  "new_question": true,
                  "question_description": "Please provide the API Key Token ",
                  "question_name": "Please provide the API Key Token",
                  "required": true,
                  "type": "textarea",
                  "variable": "netbox_api_key",
                },
              ],
          }
    - name: Create Inventory
      ansible.controller.inventory:
        name: Netbox Inventory
        organization: "Red Hat network organization"

    - name: Create projects
      ansible.controller.project:
        name: Netbox Project
        organization: "Red Hat network organization"
        scm_url: "http://ansible-1:3000/gitea/network-demos-repo.git"
        scm_type: git
        allow_override: true
        state: present
        scm_update_on_launch: yes

    - name: Add an inventory source
      ansible.controller.inventory_source:
        name: "source-nbox"
        description: Source for inventory
        inventory: "Netbox Inventory"
        update_on_launch: True
        source: scm
        source_path: dynamic_inventory/netbox.inventory.yml
        source_project: "Netbox Project"
        execution_environment: "Validated Network"
        source_vars:
          NETBOX_TOKEN: ""

    - name: Create a job-template - Network-Netbox-Facts
      ansible.controller.job_template:
        name: "Network-Netbox-Facts"
        organization: "Red Hat network organization"
        inventory: "Netbox Inventory"
        project: "Netbox Project"
        playbook: "netbox/facts.yml"
        credentials:
          - "Workshop Credential"
        execution_environment: "Validated Network"
        state: "present"

    - name: Create a job-template - Network-Netbox-Compare-Configs
      ansible.controller.job_template:
        name: "Network-Netbox-Compare-Configs"
        organization: "Red Hat network organization"
        inventory: "Netbox Inventory"
        project: "Netbox Project"
        playbook: "netbox/compare_intended_vs_actual.yml"
        credentials:
          - "Workshop Credential"
          - "Gitea Credential"
        execution_environment: "Validated Network"
        state: "present"
        diff_mode: true
        survey_enabled: yes
        survey_spec:
          {
            "description": "",
            "name": "",
            "spec":
              [
                {
                  "choices": "",
                  "default": "",
                  "max": 1024,
                  "min": 0,
                  "new_question": true,
                  "question_description": "Please provide the API Key Token ",
                  "question_name": "Please provide the API Key Token",
                  "required": true,
                  "type": "textarea",
                  "variable": "netbox_api_key",
                },
              ],
          }

    # This Starts the Cisco ISE Section
    - name: Add Host
      ansible.controller.host:
        name: ISE
        inventory: "Workshop Inventory"
        state: present
        enabled: true

    - name: Add group
      ansible.controller.group:
        name: ise_servers
        hosts:
          - ISE
        inventory: "Workshop Inventory"
        state: present

    - name: Create a job-template - Network-Cisco-ISE-Get-Groups
      ansible.controller.job_template:
        name: "Network-Cisco-ISE-Get-Groups"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "cisco_ise/get_groups.yaml"
        execution_environment: "Validated Network"
        state: "present"

    - name: Create a job-template - Network-Cisco-ISE-Get-Users
      ansible.controller.job_template:
        name: "Network-Cisco-ISE-Get-Users"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "cisco_ise/get_users.yaml"
        execution_environment: "Validated Network"
        state: "present"

    - name: Create a job-template - Network-Cisco-ISE-Network-Devices
      ansible.controller.job_template:
        name: "Network-Cisco-ISE-Network-Devices"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "cisco_ise/get_network_devices.yaml"
        execution_environment: "Validated Network"
        state: "present"

    - name: Create a job-template - Network-Cisco-ISE-Endpoints
      ansible.controller.job_template:
        name: "Network-Cisco-ISE-Endpoints"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "cisco_ise/get_endpoints.yaml"
        execution_environment: "Validated Network"
        state: "present"

    - name: Workshop Workflow
      ansible.controller.workflow_job_template:
        name: "Network-Cisco-ISE-Workflow"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"

    - name: Network-Cisco-ISE-Endpoints
      ansible.controller.workflow_job_template_node:
        identifier: Network-Cisco-ISE-Endpoints
        workflow: "Network-Cisco-ISE-Workflow"
        unified_job_template: Network-Cisco-ISE-Endpoints
        organization: "Red Hat network organization"
        state: present

    - name: Network-Cisco-ISE-Network-Devices
      ansible.controller.workflow_job_template_node:
        identifier: Network-Cisco-ISE-Network-Devices
        workflow: "Network-Cisco-ISE-Workflow"
        unified_job_template: "Network-Cisco-ISE-Network-Devices"
        organization: "Red Hat network organization"
        state: present
        success_nodes:
          - Network-Cisco-ISE-Endpoints

    - name: Network-Cisco-ISE-Get-Users
      ansible.controller.workflow_job_template_node:
        identifier: Network-Cisco-ISE-Get-Users
        workflow: "Network-Cisco-ISE-Workflow"
        unified_job_template: "Network-Cisco-ISE-Get-Users"
        organization: "Red Hat network organization"
        state: present
        success_nodes:
          - Network-Cisco-ISE-Network-Devices

    - name: Network-Cisco-ISE-Get-Groups
      ansible.controller.workflow_job_template_node:
        identifier: Network-Cisco-ISE-Get-Groups 
        workflow: "Network-Cisco-ISE-Workflow"
        unified_job_template: "Network-Cisco-ISE-Get-Groups"
        organization: "Red Hat network organization"
        state: present
        success_nodes:
          - Network-Cisco-ISE-Get-Users

  # This Starts the Cisco Meraki Section
    - name: Meraki Credential Type
      ansible.controller.credential_type:
        injectors:
          extra_vars:
             meraki_key: "{{ MERAKI_KEY | default ('{{MERAKI_KEY}}') }}"
        inputs:
          fields:
          - id: MERAKI_KEY
            type: string
            label: Meraki Dashboard API key
            secret: true
          required:
            - MERAKI_KEY
        kind: cloud
        name: Meraki_API

    - name: Meraki API
      ansible.controller.credential:
        credential_type: Meraki_API
        description: ""
        inputs:
          MERAKI_KEY: "1234567890"
        name: 'Meraki API'
        organization: "Red Hat network organization"

    - name: Create a job-template - Network-Meraki-Get-Org-ID
      ansible.controller.job_template:
        name: "Network-Meraki-Get-Org-ID"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "cisco_meraki/get_orgID.yml"
        execution_environment: "Validated Network"
        credentials: 
         - 'Meraki API'
        state: "present"

    - name: Create a job-template - Network-Meraki-Create-Network
      ansible.controller.job_template:
        name: "Network-Meraki-Create-Network"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "cisco_meraki/create_network.yml"
        execution_environment: "Validated Network"
        credentials: 
         - 'Meraki API'
        state: "present"
        survey_enabled: yes
        survey_spec:
          {
            "description": "",
            "name": "",
            "spec":
              [
                {
                  "choices": "",
                  "default": "",
                  "max": 1024,
                  "min": 0,
                  "new_question": true,
                  "question_description": "Please provide your Organization ID",
                  "question_name": "Please provide your Organization ID",
                  "required": true,
                  "type": "textarea",
                  "variable": "org_id",
                },
                {
                  "choices": "",
                  "default": "",
                  "max": 1024,
                  "min": 0,
                  "new_question": true,
                  "question_description": "Please provide your Network name",
                  "question_name": "Please provide your Network name",
                  "required": true,
                  "type": "textarea",
                  "variable": "network_name",
                },
              ],
          }

    - name: Create a job-template - Network-Meraki-Remove-Network
      ansible.controller.job_template:
        name: "Network-Meraki-Remove-Network"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "cisco_meraki/remove_network.yml"
        execution_environment: "Validated Network"
        credentials: 
         - 'Meraki API'
        state: "present"
        survey_enabled: yes
        survey_spec:
          {
            "description": "",
            "name": "",
            "spec":
              [
                {
                  "choices": "",
                  "default": "",
                  "max": 1024,
                  "min": 0,
                  "new_question": true,
                  "question_description": "Please provide your Organization ID",
                  "question_name": "Please provide your Organization ID",
                  "required": true,
                  "type": "textarea",
                  "variable": "org_id",
                },
                {
                  "choices": "",
                  "default": "",
                  "max": 1024,
                  "min": 0,
                  "new_question": true,
                  "question_description": "Please provide your Network name",
                  "question_name": "Please provide your Network name",
                  "required": true,
                  "type": "textarea",
                  "variable": "network_name",
                },
              ],
          }


    - name: Create a job-template - Network-Meraki-Network-Meraki-Multi-SSID
      ansible.controller.job_template:
        name: "Network-Meraki-Multi-SSID"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "cisco_meraki/multiple_ssid.yml"
        execution_environment: "Validated Network"
        credentials: 
         - 'Meraki API'
        state: "present"
        extra_vars:
         org_id: ''
        ask_variables_on_launch: true

    # This section starts the network_eda demo
    - name: Create a job-template - Network-EDA
      ansible.controller.job_template:
          name: "Network-EDA"
          organization: "Red Hat network organization"
          inventory: "Workshop Inventory"
          project: "Student Project"
          playbook: "network_eda/prepare_network.yml"
          execution_environment: "Validated Network"
          credentials:
          - "Workshop Credential"
          - "Controller Credential"

    - name: Create a job-template - Network-EDA-Primary
      ansible.controller.job_template:
        name: "Network-EDA-Primary"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "network_eda/primary.yml"
        credentials:
          - "Workshop Credential"
        execution_environment: "Validated Network"
        state: "present"

    - name: Create a job-template - Network-EDA-Secondary
      ansible.controller.job_template:
        name: "Network-EDA-Secondary"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "network_eda/secondary.yml"
        credentials:
          - "Workshop Credential"
          - "Controller Credential"
        execution_environment: "Validated Network"
        state: "present"
        extra_vars:
          SN_HOST: https://ven05430.service-now.com
          SN_USERNAME: admin
          SN_PASSWORD: ""


 # This section includes Network-Upgrade-As-Code Demo
    - name: Create a job-template - Network-Upgrade-Staging
      ansible.controller.job_template:
        name: "Network-Upgrade-Staging"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "network_upgrade_as_code/staging.yml"
        credentials:
          - "Workshop Credential"
        execution_environment: "Validated Network"
        state: "present"

    - name: Create a job-template - Network-Upgrade-Upgrade
      ansible.controller.job_template:
        name: "Network-Upgrade-Upgrade"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "network_upgrade_as_code/upgrade.yml"
        credentials:
          - "Workshop Credential"
        execution_environment: "Validated Network"
        state: "present"

    - name: Create a workflow job template
      ansible.controller.workflow_job_template:
        name: Network-Upgrade-Workflow
        inventory: "Workshop Inventory"
        organization: "Red Hat network organization"
        state: present
        survey_enabled: true
        survey:
          name: ""
          description: ""
          spec:
            - question_name: Which Cisco IOS version to Stage
              type: multiselect
              variable: image_staging
              required: true
              default: ""
              choices:
                - 17.06.06a
                - 17.07.01a
            - question_name: Which Cisco IOS version to Upgrade
              type: multiselect
              variable: image_upgrade
              required: true
              default: ""
              choices:
                - 17.06.06a
                - 17.07.01a

    - name: Node Network-Upgrade-Upgrade
      ansible.controller.workflow_job_template_node:
        identifier: Network-Upgrade-Upgrade
        workflow: "Network-Upgrade-Workflow"
        unified_job_template: Network-Upgrade-Upgrade
        organization: "Red Hat network organization"
        state: present

    - name: Node Upgrade Approval
      ansible.controller.workflow_job_template_node:
        identifier: "Upgrade Approval"
        workflow_job_template: "Network-Upgrade-Workflow"
        organization: "Red Hat network organization"
        approval_node:
          name: "Upgrade Approval"
          timeout: 0
        state: present

    - name: Node Upgrade Approval
      ansible.controller.workflow_job_template_node:
        identifier: "Upgrade Approval"
        workflow_job_template: "Network-Upgrade-Workflow"
        organization: "Red Hat network organization"
        success_nodes:
          - Network-Upgrade-Upgrade
        state: present

    - name: Node Network-Upgrade-Staging
      ansible.controller.workflow_job_template_node:
        identifier: Network-Upgrade-Staging
        workflow: "Network-Upgrade-Workflow"
        unified_job_template: Network-Upgrade-Staging
        organization: "Red Hat network organization"
        success_nodes: "Upgrade Approval"
        state: present



   