---
- name: Restore Router Configs from Gitea in Branches
  hosts: "{{ _group }}"
  gather_facts: True
  vars:
    ansible_network_cli_ssh_type: paramiko

  tasks:
    - debug:
        msg: "branch: {{branch_name}}"
      delegate_to: "localhost"
      run_once: true

    - name: Retrieve a repository from a distant location and make it available to the local EE
      ansible.scm.git_retrieve:
        origin:
          url: "http://gitea:gitea@ansible-1:3000/gitea/network-demos-repo.git"
        parent_directory: /tmp/
        branch:
          name: "{{branch_name}}"
          duplicate_detection: no  
      delegate_to: "localhost"
      run_once: true

    - name: enable SCP for Cisco
      ansible.netcommon.cli_config:
        config: "ip scp server enable"
        commit: True
      when: inventory_hostname in groups['cisco']
    
    - name: Restore Cisco from Backup
      ansible.netcommon.net_put:
        src: '/tmp/network-demos-repo/network_backup_files/{{inventory_hostname}}.txt'
        dest: nvram:startup-config
      when: inventory_hostname in groups['cisco'] 
      register: cisco_output
        
    - name: Restore Cisco configuration
      ansible.netcommon.cli_restore:
        filename: "startup-config"
        path: nvram://
      when: inventory_hostname in groups['cisco']
      
    - name: enable SCP for Arista
      ansible.netcommon.cli_config:
        config: |
          username ec2-user privilege 15 role network-admin nopassword
          aaa authentication login console local
          aaa authorization exec default local
        commit: True
      when: inventory_hostname in groups['arista']  

    - name: Restore Arista from Backup
      ansible.netcommon.net_put:
        src: '/tmp/network-demos-repo/network_backup_files/{{inventory_hostname}}.txt'
        dest: startup-config
      when: inventory_hostname in groups['arista']
   
    - name: Restore Arista configuration
      ansible.netcommon.cli_config:
        config: configure replace flash:startup-config 
      #ansible.netcommon.cli_restore:
      #  filename: "startup-config"
      #  path: nvram://
      when: inventory_hostname in groups['arista']  
       
    - name: Restore Juniper from Backup
      ansible.netcommon.net_put:
        src: '/tmp/network-demos-repo/network_backup_files/{{inventory_hostname}}.txt'
        dest: /var/tmp/startup-config
      when: inventory_hostname in groups['juniper']
      vars:
        ansible_connection: network_cli

    - name: Restore Juniper configuration
      ansible.netcommon.cli_restore:
        filename: "startup-config"
        path: /var/tmp/
      when: inventory_hostname in groups['juniper']
      vars: 
       ansible_network_os: junipernetworks.junos.junos
       ansible_connection: network_cli