---
- name: Grab Current Time
  set_fact: current_time="{{ lookup('pipe','date +%Y-%m-%d\ %H:%M:%S') }}"

- name: Set Stats
  cisco.ios.ios_config:
    commands:
      - no banner login
      - no banner motd

- name: Gather Banner Info
  cisco.ios.ios_command:
    commands:
      - show banner login
  register: banner

- name: Create SNOW incident if configuration not compliant
  block:
    - name: Create SNOW ticket
      servicenow.itsm.incident:
        instance:
          host: "{{ SN_HOST }}"
          username: "{{ SN_USERNAME }}"
          password: "{{ SN_PASSWORD }}"
        state: new
        description: "{{inventory_hostname.split('1')[0] | capitalize }} device is out of compliance"
        short_description: "Banner is missing on {{inventory_hostname.split('1')[0] | capitalize }} CSR 1000v @ {{ current_time }}"
      register: snow_var
      delegate_to: localhost

    - name: Show incident number
      ansible.builtin.debug:
        var: snow_var.record.number

    - name: Send Slack confirmation when kicked off via slack
      ansible.builtin.uri:
        url: "{{response_url}}"
        body: "{{lookup('template', 'snow_notify.j2')}}"
        body_format: json
        method: POST
        validate_certs: no
      delegate_to: localhost
      run_once: yes
      when: slack_user is defined and slack_user | length > 0
  when: not banner.stdout[0]

- name: Send Slack confirmation if compliant
  ansible.builtin.uri:
    url: "{{response_url}}"
    body: "{{lookup('template', 'snow_compliant.j2')}}"
    body_format: json
    method: POST
    validate_certs: no
  delegate_to: localhost
  run_once: yes
  when:
    - slack_user is defined and slack_user | length > 0
    - banner.stdout[0] | length > 1
